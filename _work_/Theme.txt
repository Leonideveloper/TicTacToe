// All constructors (in the next 3 classes) used to set final class-members by descendants

public abstract class Theme {
	public final MenuTheme menu;
	public final GameTheme game;
	
	public abstract Image getRandomStartScreenImage();
	
	public Theme(MenuTheme menuTheme, GameTheme gameTheme) {
		this.menuTheme = menuTheme;
		this.gameTheme = gameTheme;
	}
}

public abstract class MenuTheme {
	public final Image screenBackground;
	public final Color itemsColor;
	
	public abstract Animation getRandomItemAnimation();
	
	public MenuTheme(Image screenBackground, Color menuItemsColor) {
		this.screenBackground = screenBackground;
		this.menuItemsColor = menuItemsColor;
	}
}

public abstract class GameTheme {
	public final Image screenBackground;
	public final Image gameBoardBackground;
	
	public abstract Sound getRandomMoveSound();
	
	public GameTheme(Image screenBackground, Image gameBoardBackground) {
		this.screenBackground = screenBackground;
		this.gameBoardBackground = gameBoardBackground;
	}
}


// Using:

public class Menu {
	public void setUp() {
		Theme theme = GameContext.getCurrentTheme();
		setBackground(theme.menu.screenBackground);
		setItemsColor(theme.menu.itemsColor);
	}
	
	public void onClickItem(Item clickedItem) {
		Theme theme = GameContext.getCurrentTheme();
		clickedItem.startAnimation(theme.menu.getRandomItemAnimation());
		// Action action = getActionByItem(clickedItem);
		// action.start();
	}
}



// How to add theme:

public class DarkTheme extends Theme {

	private Image[] startScreenImages = getStartScreenImages();
	
	public Image getRandomStartScreenImage() {
		return startScreenImages[getRandomIndex()];
	}
	
	public DarkTheme() {
		super(new DarkMenuTheme(), new DarkGameTheme());
	}
}

public class DarkMenuTheme extends MenuTheme {

	private Animation[] itemAnimations = getItemAnimations();

	public Animation getRandomItemAnimation() {
		return itemAnimations[getRandomIndex()];
	}
	
	public DarkMenuTheme() {
		super(getDarkMenuScreenBackground(), getDarkMenuItemsColor());
	}
}

public class DarkGameTheme {
	
	private Sound[] moveSounds = getMoveSounds();

	public Sound getRandomMoveSound() {
		return moveSounds[randomIndex()];
	}
	
	public DarkGameTheme() {
		super(getDarkGameScreenBackground(), getDarkGameBoardBackground());
	}
}